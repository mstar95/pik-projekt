buildscript {
	ext {
		kotlinVersion = '1.1.1'
		springBootVersion = '1.5.2.RELEASE'
	}
	repositories {
		mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath "gradle.plugin.com.palantir:jacoco-coverage:0.4.0"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.palantir.jacoco-coverage'

version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

jar {
	baseName = 'memorizer'
	version = '0.1.0'
}

test {
    testLogging.showStandardStreams = true
}

run {
    dependsOn bootRun
}

jacocoCoverage {
    // Enforce minimum code coverage of 50% for every Java file.
    fileThreshold 0.0
}

repositories {
	mavenCentral()
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-web')
    compile("org.springframework.boot:spring-boot-starter-security")
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	runtime('org.postgresql:postgresql')
    testCompile('junit:junit:4.12')
	testCompile "org.mockito:mockito-core:2.1.0"
}